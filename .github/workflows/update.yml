name: update

on:
  workflow_dispatch:
  #push:
  #  paths:
  #    - '.github/workflows/update.yml'
  #    - 'src/v2ray/transport/internet/tcp/sockopt_darwin.go'
  #schedule:
  #  - cron: '3 * * * *'
  
concurrency:
  group: update
  cancel-in-progress: true | cut -d- -f2
    
jobs:        
  v2ray:
    runs-on: ubuntu-latest
    steps:
      - id: check_version
        run: |
          upstream_version=$(basename $(curl -Ls -o /dev/null -w %{url_effective} https://github.com/v2fly/v2ray-core/releases/latest))
          release_version=$(wget -qO - https://api.github.com/repos/goofw/homebrew-homebrew/releases/latest | grep -o "https://.*/v2ray-.*-macos-64\.zip" | cut -d- -f2)
          [ "$upstream_version" != "$release_version" ] && echo '::set-output name=RUN::true' || echo '::set-output name=RUN::false'
          echo "VERSION=$upstream_version" >> $GITHUB_ENV
      
      - if: steps.check_version.outputs.RUN == 'true'
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16.3'
      
      - if: steps.check_version.outputs.RUN == 'true'
        uses: actions/checkout@v2
        with:
          repository: v2fly/v2ray-core
          ref: ${{ env.VERSION }}
          
      - if: steps.check_version.outputs.RUN == 'true'
        uses: actions/checkout@v2
        with:
          path: patch
          
      - if: steps.check_version.outputs.RUN == 'true'
        run: |
          cp patch/src/v2ray/transport/internet/tcp/sockopt_darwin.go transport/internet/tcp/sockopt_darwin.go
          sed -i '1s/$/,!darwin/' transport/internet/tcp/sockopt_other.go
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o v2ray -trimpath -ldflags "-s -w -buildid=" ./main
          
          wget https://github.com/v2fly/v2ray-core/releases/download/$VERSION/v2ray-macos-64.zip
          zip -9vr v2ray-macos-64.zip v2ray
          mv v2ray-macos-64.zip v2ray-$VERSION-macos-64.zip
          
      - if: steps.check_version.outputs.RUN == 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: homebrew
          release_name: homebrew
          
      - if: steps.check_version.outputs.RUN == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: v2ray-macos-64.zip
          asset_name: v2ray-macos-64.zip
          asset_content_type: application/zip
                
      - run: |
          version=$(basename $(curl -Ls -o /dev/null -w %{url_effective} https://github.com/goofw/v2ray/releases/latest))
          url=https://github.com/goofw/v2ray/releases/download/$version/v2ray-macos-64.zip
          sha256=$(curl -Ls $url | shasum -a 256 | cut -d " " -f 1 )
          
          sed -i "s|^  version.*|  version \"$version\"|" Formula/v2ray.rb
          sed -i "s|^  url.*|  url \"$url\"|" Formula/v2ray.rb
          sed -i "s|^  sha256.*|  sha256 \"$sha256\"|" Formula/v2ray.rb
          
          git config user.name $(git log -1 --pretty=format:'%an')
          git config user.email $(git log -1 --pretty=format:'%ae')
          git add .
          git diff-index --quiet HEAD || git commit -m "update v2ray $version"
          git push
          
      - uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 5
